Decoded BB at ?+0:
                   ?:  55                    push    %rbp
                 ?+1:  48 89 e5              mov     %rsp,%rbp
                 ?+4:  48 8b 07              mov     (%rdi),%rax
                 ?+7:  48 8b 0d 22 00 00 00  mov     0x22(%rip),%rcx
                ?+14:  48 01 c8              add     %rcx,%rax
                ?+17:  48 89 07              mov     %rax,(%rdi)
                ?+20:  31 c0                 xor     %eax,%eax
                ?+22:  c9                    leave  
                ?+23:  c3                    ret    
; ModuleID = '<llengine>'
target triple = "x86_64-pc-linux-gnu"

@__ll_global_base__ = external global i8

define i64 @test(i8* nocapture, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone) {
  %7 = bitcast i8* %0 to i64*
  %8 = load i64, i64* %7, align 8, !asm.reg.rax !0
  %9 = load i64, i64* bitcast (i8* @__ll_global_base__ to i64*), align 8, !asm.reg.rcx !0
  %10 = add i64 %9, %8, !asm.reg.rax !0
  store i64 %10, i64* %7, align 8
  ret i64 0
}

!0 = !{}

Result: 0 11 2 3 4 5 6 7 8
Result: 0 11 2 3 4 5 6 7 8
