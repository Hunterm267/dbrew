Decoded BB at ?+0:
                   ?:  66 0f 10 07           movupd  (%rdi),%xmm0
                 ?+4:  66 0f 10 0e           movupd  (%rsi),%xmm1
                 ?+8:  f2 0f 58 c1           addsd   %xmm1,%xmm0
                ?+12:  66 0f 29 07           movapd  %xmm0,(%rdi)
                ?+16:  f2 0f 10 07           movsd   (%rdi),%xmm0
                ?+20:  f2 0f 10 0e           movsd   (%rsi),%xmm1
                ?+24:  f2 0f 58 c1           addsd   %xmm1,%xmm0
                ?+28:  f2 0f 11 07           movsd   %xmm0,(%rdi)
                ?+32:  31 c0                 xor     %eax,%eax
                ?+34:  c3                    ret    
; ModuleID = '<llengine>'
target triple = "x86_64-pc-linux-gnu"

define i64 @test(i8* nocapture, i8* noalias nocapture readonly, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone) {
  %7 = bitcast i8* %0 to <2 x double>*
  %8 = load <2 x double>, <2 x double>* %7, align 8
  %9 = bitcast i8* %1 to <2 x double>*
  %10 = load <2 x double>, <2 x double>* %9, align 8
  %11 = extractelement <2 x double> %8, i32 0
  %12 = extractelement <2 x double> %10, i32 0
  %13 = fadd double %11, %12
  %14 = insertelement <2 x double> %8, double %13, i64 0
  store <2 x double> %14, <2 x double>* %7, align 16
  %15 = bitcast i8* %0 to double*
  %16 = fadd double %12, %13
  store double %16, double* %15, align 8
  ret i64 0
}

; Function Attrs: nounwind readnone
declare void @llvm.donothing() #0

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

attributes #0 = { nounwind readnone }

Result: 0 5.000000 2.000000 3.000000 3.000000
Result: 0 5.000000 2.000000 3.000000 3.000000
