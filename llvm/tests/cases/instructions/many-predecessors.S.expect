Decoding BB ? ...
                   ?:  31 c0                 xor     %eax,%eax
                 ?+2:  48 85 ff              test    %rdi,%rdi
                 ?+5:  74 16                 je      $?+29
Decoding BB ?+7 ...
                 ?+7:  74 14                 je      $?+29
Decoding BB ?+9 ...
                 ?+9:  74 12                 je      $?+29
Decoding BB ?+11 ...
                ?+11:  74 10                 je      $?+29
Decoding BB ?+13 ...
                ?+13:  74 0e                 je      $?+29
Decoding BB ?+15 ...
                ?+15:  74 0c                 je      $?+29
Decoding BB ?+17 ...
                ?+17:  74 0a                 je      $?+29
Decoding BB ?+19 ...
                ?+19:  74 08                 je      $?+29
Decoding BB ?+21 ...
                ?+21:  74 06                 je      $?+29
Decoding BB ?+23 ...
                ?+23:  74 04                 je      $?+29
Decoding BB ?+25 ...
                ?+25:  74 02                 je      $?+29
Decoding BB ?+27 ...
                ?+27:  ff c0                 inc     %eax
                ?+29:  c3                    ret    
; ModuleID = '<llengine>'
target triple = "x86_64-pc-linux-gnu"

; Function Attrs: nounwind readnone
define i64 @test(i64) #0 {
  %2 = icmp eq i64 %0, 0, !asm.flag.zf !0
  %3 = zext i1 %2 to i64
  %4 = xor i64 %3, 1
  %5 = select i1 %2, i64 0, i64 %4
  ret i64 %5
}

attributes #0 = { nounwind readnone }

!0 = !{}

Result: 1
Result: 1
