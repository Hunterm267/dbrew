Decoded BB at ?+0:
                   ?:  55                    push    %rbp
                 ?+1:  48 89 e5              mov     %rsp,%rbp
                 ?+4:  48 89 7d e8           mov     %rdi,-0x18(%rbp)
                 ?+8:  48 c7 45 f8 00 00 00  movq    $0x0,-0x8(%rbp)
                ?+15:  00                  
                ?+16:  48 8b 45 e8           mov     -0x18(%rbp),%rax
                ?+20:  48 8d 50 ff           lea     -0x1(%rax),%rdx
                ?+24:  48 89 55 e8           mov     %rdx,-0x18(%rbp)
                ?+28:  48 01 45 f8           add     %rax,-0x8(%rbp)
                ?+32:  48 83 7d e8 00        cmpq    $0x0,-0x18(%rbp)
                ?+37:  75 e9                 jne     $?+16
Decoded BB at ?+27:
                ?+39:  48 8b 45 f8           mov     -0x8(%rbp),%rax
                ?+43:  5d                    pop     %rbp
                ?+44:  c3                    ret    
; ModuleID = '<llengine>'
target triple = "x86_64-redhat-linux-gnu"

; Function Attrs: nounwind readnone
declare i8 @llvm.ctpop.i8(i8) #0

; Function Attrs: nounwind readnone
declare void @llvm.donothing() #0

; Function Attrs: readnone
define i64 @test(i8*, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone, i8* nocapture readnone) #1 {
  %7 = ptrtoint i8* %0 to i64
  %8 = add i64 %7, -1
  %9 = mul i64 %8, %8
  %10 = zext i64 %8 to i65
  %11 = add i64 %7, -2
  %12 = zext i64 %11 to i65
  %13 = mul i65 %10, %12
  %14 = lshr i65 %13, 1
  %15 = trunc i65 %14 to i64
  %16 = add i64 %9, %7
  %.neg = sub i64 0, %15
  %17 = add i64 %16, %.neg
  ret i64 %17
}

attributes #0 = { nounwind readnone }
attributes #1 = { readnone }

Result: 55
Result: 55
